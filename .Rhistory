shiny::runApp('D:/R/Developing-Data-Products/part1_devdataprod-shiny')
shiny::runApp('D:/R/Developing-Data-Products/part1_devdataprod-shiny')
library(devtools)
install_github('slidify', 'ramnathv')
install_github('ramnathv/slidify')
install_github('ramnathv/slidify', force=TRUE)
install_github('ramnathv/slidifyLibraries')
setwd("C:/Users/Administrator/Downloads/GCD")
## Merges the training and the test sets to create one data set.
## considering zip file is downloaded and saved under working directory
unzip("getdata-projectfiles-UCI HAR Dataset.zip")
## test data:
XTest<- read.table("UCI HAR Dataset/test/X_test.txt")
YTest<- read.table("UCI HAR Dataset/test/Y_test.txt")
SubjectTest <-read.table("UCI HAR Dataset/test/subject_test.txt")
## train data:
XTrain<- read.table("UCI HAR Dataset/train/X_train.txt")
YTrain<- read.table("UCI HAR Dataset/train/Y_train.txt")
SubjectTrain <-read.table("UCI HAR Dataset/train/subject_train.txt")
## features and activity
features<-read.table("UCI HAR Dataset/features.txt")
activity<-read.table("UCI HAR Dataset/activity_labels.txt")
##Part1 - merges train and test data in one dataset (full dataset at the end)
X<-rbind(XTest, XTrain)
Y<-rbind(YTest, YTrain)
Subject<-rbind(SubjectTest, SubjectTrain)
## Dimension of new datasets:
dim(X)
dim(Y)
dim(Subject)
index<-grep("mean\\(\\)|std\\(\\)", features[,2]) ##getting features indeces which contain mean() and std() in their name
length(index) ## count of features
X<-X[,index] ## getting only variables with mean/stdev
dim(X) ## checking dim of subset
Y[,1]<-activity[Y[,1],2] ## replacing numeric values with lookup value from activity.txt; won't reorder Y set
head(Y)
names<-features[index,2] ## getting names for variables
names(X)<-names ## updating colNames for new dataset
names(Subject)<-"SubjectID"
names(Y)<-"Activity"
CleanedData<-cbind(Subject, Y, X)
head(CleanedData[,c(1:4)]) ## first 5 columns
CleanedData<-data.table(CleanedData)
TidyData <- CleanedData[, lapply(.SD, mean), by = 'SubjectID,Activity'] ## features average by Subject and by activity
dim(TidyData)
write.table(TidyData, file = "Tidy.txt", row.names = FALSE)
## First 12 rows and 5 columns in Tidy dataset:
head(TidyData[order(SubjectID)][,c(1:4), with = FALSE],12)
names<-features[index,2] ## getting names for variables
names(X)<-names ## updating colNames for new dataset
names(Subject)<-"SubjectID"
names(Y)<-"Activity"
CleanedData<-cbind(Subject, Y, X)
head(CleanedData[,c(1:4)]) ## first 5 columns
CleanedData<-data.table(CleanedData)
TidyData <- CleanedData[, lapply(.SD, mean), by = 'SubjectID,Activity'] ## features average by Subject and by activity
dim(TidyData)
CleanedData<-data.table(CleanedData)
TidyData <- CleanedData[, lapply(.SD, mean), by = 'SubjectID,Activity'] ## features average by Subject and by activity
CleanedData<-data.table(CleanedData)
TidyData <- CleanedData[, lapply(.SD, mean), by = 'SubjectID, Activity'] ## features average by Subject and by activity
CleanedData<-data.table(CleanedData)
TidyData <- CleanedData[, lapply(.SD, mean), by = 'SubjectID, activity'] ## features average by Subject and by activity
CleanedData<-data.table(CleanedData)
myd <- data.table
CleanedData<- data.table(CleanedData)
install.packages("data.table")
CleanedData<- data.table(CleanedData)
CleanedData<- data.table(CleanedData)
CleanedData<- data.table(CleanedData)
library("data.table")
CleanedData<- data.table(CleanedData)
TidyData <- CleanedData[, lapply(.SD, mean), by = 'SubjectID, activity'] ## features average by Subject and by activity
dim(TidyData)
write.table(TidyData, file = "Tidy.txt", row.names = FALSE)
## First 12 rows and 5 columns in Tidy dataset:
head(TidyData[order(SubjectID)][,c(1:4), with = FALSE],12)
TidyData <- CleanedData[, lapply(.SD, mean), by = 'SubjectID, activity'] ## features average by Subject and by activity
TidyData <- CleanedData[, lapply(.SD, mean), by = 'SubjectID,Activity'] ## features average by Subject and by activity
dim(TidyData)
write.table(TidyData, file = "Tidy.txt", row.names = FALSE)
## First 12 rows and 5 columns in Tidy dataset:
head(TidyData[order(SubjectID)][,c(1:4), with = FALSE],12)
# Codebook
